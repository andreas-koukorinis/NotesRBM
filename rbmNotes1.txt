 \documentclass{article} \usepackage{amsmath, amssymb, amsfonts} \usepackage{geometry} \usepackage{booktabs} \usepackage{array} \usepackage{enumitem} \usepackage{xcolor} \usepackage{comment} \usepackage{algorithm} \usepackage{algpseudocode} \usepackage{mathtools} \geometry{margin=1in} \newcommand{\defeq}{\stackrel{\text{def}}{=}}

\title{Mathematical Framework for ETF Create/Redeem Execution using RFQs} \author{} \date{}

\begin{document}

\maketitle

\section{Introduction and Problem Definition}

This document presents a mathematical framework for executing ETF creation and redemption operations through Request for Quote (RFQ) mechanisms in credit markets. We begin with the foundation of the geodesic framework for credit market making and extend it to incorporate:

\begin{itemize} \item Fill curve probability models for RFQ execution \item Integer programming for basket completion \item Dynamic basket eligibility constraints \item Arbitrage economics \item Cross-basket optimization \end{itemize}

\subsection{Notation and Base Definitions}

Let us define the following: \begin{align} \mathbf{p}(t) &\in \mathbb{R}^n \quad \text{Portfolio position vector at time $t$ [units: DV01]} \ \mathbf{w}_j &\in \mathbb{R}^n \quad \text{Composition vector for ETF basket type $j$ [units: proportion]} \ \boldsymbol{\Sigma} &\in \mathbb{R}^{n \times n} \quad \text{Risk covariance matrix [units: $(bp)^2$/day]} \ \boldsymbol{\Gamma} &\in \mathbb{R}^{n \times n} \quad \text{Trading cost matrix [units: $/$(DV01/day)^2$]} \ \boldsymbol{\Pi}(t, \mathbf{s}, \mathbf{a}) &\in \mathbb{R}^{n \times n} \quad \text{Execution probability matrix [dimensionless]} \end{align}

\section{Fill Curve Probability Model for RFQs}

\subsection{General Fill Curve Formulation}

The fill probability for an RFQ on instrument $i$ with size $s_i$ and price aggression $a_i$ is modeled as:

\begin{align} \pi_i^{\text{RFQ}}(t, s_i, a_i, d_i, m_t) = \underbrace{\pi_{\text{base},i}(t)}{\text{baseline probability}} \cdot \underbrace{f{\text{size}}(s_i, i)}{\text{size adjustment}} \cdot \underbrace{f{\text{aggr}}(a_i, i)}{\text{price adjustment}} \cdot \underbrace{f{\text{dir}}(d_i, i, t)}{\text{direction adjustment}} \cdot \underbrace{f{\text{market}}(m_t)}_{\text{market conditions}} \end{align}

Each component is defined as follows:

\begin{align} f_{\text{size}}(s_i, i) &= \exp\left(-\beta_{\text{size},i} \cdot \frac{s_i}{\text{ADV}i}\right) \ f{\text{aggr}}(a_i, i) &= \exp\left(\beta_{\text{aggr},i} \cdot a_i\right) \ f_{\text{dir}}(d_i, i, t) &= 1 + \alpha_{\text{dir},i} \cdot \left(\text{PM}i(t) \cdot d_i\right) \ f{\text{market}}(m_t) &= 1 + \gamma_{\text{market}} \cdot \text{VIXspread}(t) \end{align}

Where: \begin{itemize} \item $\pi_{\text{base},i}(t)$ is the baseline fill probability for instrument $i$ at time $t$ \item $\beta_{\text{size},i}$ is the size sensitivity parameter for instrument $i$ \item $\beta_{\text{aggr},i}$ is the price aggression sensitivity for instrument $i$ \item $\text{ADV}_i$ is the average daily volume for instrument $i$ \item $a_i$ is the price aggression in basis points \item $\text{PM}_i(t)$ is the position imbalance in the market (+1 for excess supply, -1 for excess demand) \item $d_i$ is the trade direction (+1 for buy, -1 for sell) \item $\text{VIXspread}(t)$ is a measure of market stress \end{itemize}

\subsection{Fill Curve Calibration}

The fill curve parameters are calibrated using historical RFQ data:

\begin{align} \beta_{\text{size},i}(t+1) &= \alpha \cdot \beta_{\text{size},i}(t) + (1-\alpha) \cdot \hat{\beta}{\text{size},i} \ \beta{\text{aggr},i}(t+1) &= \alpha \cdot \beta_{\text{aggr},i}(t) + (1-\alpha) \cdot \hat{\beta}_{\text{aggr},i} \end{align}

Where: \begin{itemize} \item $\alpha$ is a smoothing parameter (typically 0.8-0.95) \item $\hat{\beta}{\text{size},i}$ and $\hat{\beta}{\text{aggr},i}$ are estimated from recent RFQ responses \end{itemize}

The estimation uses maximum likelihood on a rolling window of RFQ responses:

\begin{align} (\hat{\beta}{\text{size},i}, \hat{\beta}{\text{aggr},i}) = \underset{\beta_{\text{size}}, \beta_{\text{aggr}}}{\arg\max} \sum_{k \in \mathcal{K}_i} \left[ r_k \log(\pi_i(t_k, s_k, a_k)) + (1-r_k) \log(1-\pi_i(t_k, s_k, a_k)) \right] \end{align}

Where: \begin{itemize} \item $\mathcal{K}_i$ is the set of recent RFQs for instrument $i$ \item $r_k$ is the binary outcome of RFQ $k$ (1 for fill, 0 for no fill) \item $t_k, s_k, a_k$ are the time, size, and aggression of RFQ $k$ \end{itemize}

\section{ETF Basket Creation/Redemption Framework}

\subsection{Dynamic Basket Eligibility}

The set of eligible baskets at time $t$ is:

\begin{align} \mathcal{W}(t) = {\mathbf{w}_1(t), \mathbf{w}_2(t), \ldots, \mathbf{w}_K(t)} \end{align}

For each instrument $i$, the eligibility indicator is:

\begin{align} e_i(t) = \begin{cases} 1 & \text{if instrument $i$ is eligible at time $t$} \ 0 & \text{otherwise} \end{cases} \end{align}

The eligibility vector is $\mathbf{e}(t) = [e_1(t), e_2(t), \ldots, e_n(t)]^T$.

For each basket type $j$, the composition vector $\mathbf{w}_j(t)$ must satisfy:

\begin{align} w_{j,i}(t) &= 0 \quad \forall i \text{ where } e_i(t) = 0 \ \sum_{i=1}^n w_{j,i}(t) &= 1 \ L_{j,c} \leq \sum_{i \in \mathcal{C}c} w{j,i}(t) &\leq U_{j,c} \quad \forall c \in {1,2,\ldots,C} \end{align}

Where: \begin{itemize} \item $\mathcal{C}c$ is the set of instruments in category $c$ (e.g., sector, rating) \item $L{j,c}$ and $U_{j,c}$ are lower and upper bounds for category $c$ in basket $j$ \end{itemize}

\subsection{Phased Execution Approach}

Our approach consists of three distinct phases:

\begin{enumerate} \item Approach Phase: Use modified geodesic flow to approach integer baskets \item Integer Optimization Phase: Determine optimal basket quantities \item RFQ Execution Phase: Execute RFQs to complete baskets \end{enumerate}

\section{Phase 1: Approach Phase}

\subsection{Modified Geodesic Flow}

We modify the original geodesic flow to bias toward basket directions:

\begin{align} \dot{\mathbf{p}}(t) = \underbrace{-\mathbf{M}f^{-1} \mathbf{K}f \mathbf{p}(t)}{\text{original geodesic flow}} + \underbrace{\mathbf{M}f^{-1} \lambda{\text{basket}}(t) \sum{j} v_j(t) \mathbf{u}_j \mathbf{u}j^T \mathbf{p}(t)}{\text{basket direction bias}} \end{align}

Where: \begin{itemize} \item $\mathbf{M}_f = \mathbf{B}^T \boldsymbol{\Pi}^{-1} \boldsymbol{\Gamma} \boldsymbol{\Pi}^{-1} \mathbf{B}$ is the "mass matrix" \item $\mathbf{K}_f = \mathbf{B}^T \boldsymbol{\Sigma} \mathbf{B}$ is the "stiffness matrix" \item $\mathbf{u}_j = \mathbf{w}_j / |\mathbf{w}j|$ is the normalized basket direction \item $v_j(t) \in {0,1}$ indicates whether basket $j$ is selected \item $\lambda{\text{basket}}(t)$ is the basket alignment parameter \end{itemize}

The basket alignment parameter increases as we approach basket completion:

\begin{align} \lambda_{\text{basket}}(t) = \lambda_{\text{base}} \cdot \left(1 + \gamma \cdot \frac{\max_j \lfloor \mathbf{p}(t)^T \mathbf{u}_j / (\mathbf{w}_j^T \mathbf{u}_j) \rfloor}{\mathbf{p}(t)^T \mathbf{u}_j / (\mathbf{w}_j^T \mathbf{u}_j)}\right) \end{align}

\subsection{Multi-Basket Construction with Diversification Constraints}

To allow for simultaneous execution of multiple basket types while maintaining diversification, we relax the single-basket constraint and introduce correlation penalties:

\begin{align} \mathbf{v}(t) = \underset{\mathbf{v}}{\arg\max} \quad & \underbrace{\sum_{j=1}^K v_j \cdot \text{ArbitrageValue}j(t)}{\text{total arbitrage value}} - \underbrace{\sum_{j=1}^K v_j \cdot \text{ExecutionCost}j(t)}{\text{execution costs}} \ & - \underbrace{\lambda_{\text{overlap}} \sum_{j=1}^K \sum_{l=j+1}^K v_j v_l \cdot \text{Overlap}(j,l)}{\text{basket overlap penalty}} \ \text{subject to} \quad & 1 \leq \sum{j=1}^K v_j \leq V_{\max} \ & v_j \in {0,1} \quad \forall j \end{align}

Where: \begin{itemize} \item $V_{\max}$ is the maximum number of basket types to execute simultaneously \item $\lambda_{\text{overlap}}$ is the overlap penalty parameter \item $\text{Overlap}(j,l)$ measures the similarity between baskets $j$ and $l$ \end{itemize}

The overlap measure can be defined in multiple ways:

\begin{align} \text{Overlap}{\text{corr}}(j,l) &= \frac{\mathbf{w}j^T \boldsymbol{\Sigma} \mathbf{w}l}{\sqrt{\mathbf{w}j^T \boldsymbol{\Sigma} \mathbf{w}j \cdot \mathbf{w}l^T \boldsymbol{\Sigma} \mathbf{w}l}} \ \text{Overlap}{\text{exposure}}(j,l) &= \sum{f=1}^F \left| \sum{i=1}^n w{j,i} \cdot \beta{i,f} - \sum{i=1}^n w{l,i} \cdot \beta_{i,f} \right| \ \text{Overlap}{\text{composition}}(j,l) &= \sum{i=1}^n \min(w_{j,i}, w_{l,i}) \end{align}

Where: \begin{itemize} \item $\text{Overlap}{\text{corr}}(j,l)$ is the correlation-based overlap \item $\text{Overlap}{\text{exposure}}(j,l)$ measures factor exposure differences \item $\text{Overlap}{\text{composition}}(j,l)$ measures direct composition overlap \item $\beta{i,f}$ is the sensitivity of instrument $i$ to factor $f$ \end{itemize}

In practice, we can use a weighted combination:

\begin{align} \text{Overlap}(j,l) = \omega_{\text{corr}} \cdot \text{Overlap}{\text{corr}}(j,l) + \omega{\text{exposure}} \cdot \text{Overlap}{\text{exposure}}(j,l) + \omega{\text{composition}} \cdot \text{Overlap}_{\text{composition}}(j,l) \end{align}

\subsection{Comprehensive Arbitrage Value Calculation}

The arbitrage value calculation incorporates the full arbitrage stack:

\begin{align} \text{ArbitrageValue}j(t) = \underbrace{(\text{ETF}{\text{bid/ask}}(t) - \text{FairValue}j(t))}{\text{true premium/discount}} - \underbrace{\text{Fees}j}{\text{creation/redemption fees}} - \underbrace{\text{FrictionCost}j(t)}{\text{market frictions}} - \underbrace{\text{RiskAdjustment}j(t)}{\text{risk adjustment}} \end{align}

For creation (buying bonds, selling ETF): \begin{align} \text{ArbitrageValue}j^{\text{create}}(t) = \text{ETF}{\text{bid}}(t) - \text{FairValue}_j(t) - \text{Fees}_j^{\text{create}} - \text{FrictionCost}_j^{\text{create}}(t) - \text{RiskAdjustment}_j(t) \end{align}

For redemption (buying ETF, selling bonds): \begin{align} \text{ArbitrageValue}_j^{\text{redeem}}(t) = \text{FairValue}j(t) - \text{ETF}{\text{ask}}(t) - \text{Fees}_j^{\text{redeem}} - \text{FrictionCost}_j^{\text{redeem}}(t) - \text{RiskAdjustment}_j(t) \end{align}

Where each component is defined as:

\begin{align} \text{FairValue}j(t) &= \sum{i=1}^n w_{j,i} \cdot \text{BondMidPrice}_i(t) + \text{AccruedIncome}_j(t) \ \text{Fees}_j &= \text{BaseFee}_j + \text{AdValorem}_j \cdot \text{BasketSize}_j \ \text{FrictionCost}_j(t) &= \text{BidAskImpact}_j(t) + \text{NAVTimingEffect}_j(t) + \text{SettlementCost}_j \ \text{RiskAdjustment}j(t) &= \lambda{\text{risk}} \cdot \sqrt{\text{BasketSize}_j^2 \cdot \mathbf{w}_j^T \boldsymbol{\Sigma} \mathbf{w}_j \cdot \tau_j} \end{align}

The individual terms are: \begin{itemize} \item $\text{ETF}_{\text{bid/ask}}(t)$ is the actionable ETF bid or ask price \item $\text{FairValue}_j(t)$ is the calculated fair value of basket $j$ \item $\text{BondMidPrice}_i(t)$ is the mid-price of bond $i$ \item $\text{AccruedIncome}_j(t)$ includes dividends and interest accrued but not yet distributed \item $\text{BaseFee}_j$ is the fixed creation/redemption fee \item $\text{AdValorem}_j$ is the percentage-based fee \item $\text{BidAskImpact}_j(t)$ measures the impact of bid-ask spreads on execution \item $\text{NAVTimingEffect}_j(t)$ accounts for NAV calculation timing differences \item $\text{SettlementCost}j$ includes financing costs during settlement \item $\tau_j$ is the time horizon for risk consideration (typically 1-3 days) \item $\lambda{\text{risk}}$ is the risk aversion parameter \end{itemize}

The execution cost term remains: \begin{align} \text{ExecutionCost}j(t) &= (\mathbf{p}{\text{target},j} - \mathbf{p}(t))^T \boldsymbol{\Pi}(t)^{-1} \boldsymbol{\Gamma} \boldsymbol{\Pi}(t)^{-1} (\mathbf{p}_{\text{target},j} - \mathbf{p}(t)) \end{align}

\subsection{Transition Criterion}

We transition from Phase 1 to Phase 2 when:

\begin{align} \frac{|\mathbf{p}(t) - n_j \cdot \mathbf{w}_j|_2}{|n_j \cdot \mathbf{w}_j|2} < \theta{\text{RFQ}} \end{align}

Where: \begin{itemize} \item $n_j = \left\lfloor \min_i \frac{p_i(t)}{w_{j,i}} \right\rfloor$ is the maximum number of complete baskets possible \item $\theta_{\text{RFQ}}$ is a threshold parameter (typically 0.1 or 10%) \end{itemize}

\section{Phase 2: Integer Optimization}

\subsection{Mixed Integer Quadratic Program (MIQP)}

When we're close to completing baskets, we solve:

\begin{align} \min_{\mathbf{z}, \mathbf{p}{\text{residual}}} \quad & \underbrace{(\mathbf{p}{\text{final}} - \mathbf{p}(t))^T \boldsymbol{\Pi}(t)^{-1} \boldsymbol{\Gamma} \boldsymbol{\Pi}(t)^{-1} (\mathbf{p}{\text{final}} - \mathbf{p}(t))}{\text{execution cost}} + \underbrace{\lambda_{\text{risk}} \mathbf{p}{\text{final}}^T \boldsymbol{\Sigma} \mathbf{p}{\text{final}}}{\text{risk cost}} \ & - \underbrace{\sum{j=1}^K z_j \cdot \text{ArbitrageValue}j(t)}{\text{full arbitrage stack value}} + \underbrace{\lambda_{\text{diversity}} \sum_{j=1}^K \sum_{l=j+1}^K z_j z_l \cdot \text{Overlap}(j,l)}{\text{diversity penalty}} \ \text{subject to} \quad & \mathbf{p}{\text{final}} = \sum_{j=1}^K z_j \mathbf{w}j + \mathbf{p}{\text{residual}} \ & z_j \in \mathbb{Z}^+ \quad \forall j \ & \sum_{j=1}^K z_j \leq Z_{\max} \ & \mathbf{p}{\text{residual}}^T \boldsymbol{\Sigma} \mathbf{p}{\text{residual}} \leq \text{RiskLimit} \ & \text{Additional constraints on } \mathbf{p}_{\text{residual}} \end{align}

Where: \begin{itemize} \item $\mathbf{z} = [z_1, z_2, \ldots, z_K]^T$ is the vector of integer basket quantities \item $\mathbf{p}{\text{final}}$ is the final portfolio position after execution \item $\mathbf{p}{\text{residual}}$ is the residual position after creating/redeeming baskets \item $\lambda_{\text{risk}}$ is the risk aversion parameter \end{itemize}

\subsection{Solution Algorithm}

The MIQP is solved using branch-and-bound with the following steps:

\begin{algorithm} \caption{Integer Basket Optimization} \begin{algorithmic}[1] \State Initialize best objective value $Z^* \gets \infty$ and best solution $\mathbf{z}^* \gets \mathbf{0}$ \State Create root node with relaxed problem (allow $z_j \in \mathbb{R}^+$) \State Add root node to priority queue $Q$ \While{$Q$ is not empty} \State Extract node with best bound from $Q$ \State Solve the relaxed QP at this node, yielding solution $\mathbf{z}{\text{relax}}$ \If{objective value $\geq Z^*$} \State Prune this node (bound is worse than best solution) \State \textbf{continue} \EndIf \If{$\mathbf{z}{\text{relax}}$ has all integer values} \If{objective value $< Z^$} \State Update $Z^ \gets$ objective value and $\mathbf{z}^* \gets \mathbf{z}{\text{relax}}$ \EndIf \State \textbf{continue} \EndIf \State Select non-integer component $z_j$ in $\mathbf{z}{\text{relax}}$ \State Create two child nodes by adding constraints $z_j \leq \lfloor z_j \rfloor$ and $z_j \geq \lceil z_j \rceil$ \State Add child nodes to $Q$ \EndWhile \State \Return $\mathbf{z}^$ and compute corresponding $\mathbf{p}_{\text{residual}}^$ \end{algorithmic} \end{algorithm}

\section{Phase 3: RFQ Execution}

\subsection{Optimal RFQ Strategy}

For each instrument $i$ in the target baskets, we determine the optimal RFQ size and price aggression:

\begin{align} (s_i^, a_i^) = \underset{s_i, a_i}{\arg\max} \quad \underbrace{\pi_i^{\text{RFQ}}(t, s_i, a_i, d_i, m_t)}_{\text{fill probability}} \cdot \underbrace{(\text{ArbitrageValue}i(t, s_i) - s_i \cdot a_i)}{\text{net profit with full arbitrage stack}} \end{align}

Where: \begin{itemize} \item $s_i$ is the RFQ size \item $a_i$ is the price aggression in basis points \item $d_i$ is the direction of the trade \item $m_t$ represents current market conditions \end{itemize}

\subsection{RFQ Size Constraints}

The RFQ sizes must satisfy the basket constraints:

\begin{align} \sum_{i=1}^n s_i \cdot w_{j,i} = \text{TotalBasketSize}_j \quad \forall j \text{ with } z_j > 0 \end{align}

To handle this constraint, we typically set:

\begin{align} s_i = \sum_{j: z_j > 0} z_j \cdot w_{j,i} \end{align}

\subsection{RFQ Batching Algorithm}

To improve execution efficiency, we batch RFQs according to:

\begin{algorithm} \caption{RFQ Batching and Execution} \begin{algorithmic}[1] \State Initialize target positions $\mathbf{p}{\text{target}} = \mathbf{p}(t) + \sum{j=1}^K z_j^* \mathbf{w}j$ \State Compute required trades $\Delta \mathbf{p} = \mathbf{p}{\text{target}} - \mathbf{p}(t)$ \State Group instruments by liquidity tiers: $\mathcal{T}1, \mathcal{T}2, \ldots, \mathcal{T}L$ \For{each tier $\mathcal{T}\ell$ from most liquid to least} \State Identify instruments in this tier: $\mathcal{I}\ell = {i : i \in \mathcal{T}\ell \text{ and } \Delta p_i \neq 0}$ \For{each instrument $i \in \mathcal{I}_\ell$} \State Compute optimal RFQ size: $s_i = \min(|\Delta p_i|, \text{MaxRFQSize}_i)$ \State Compute optimal aggression: $a_i^* = \arg\max_a \pi_i^{\text{RFQ}}(t, s_i, a, \text{sign}(\Delta p_i), m_t) \cdot (s_i \cdot \text{AdjustedArbitrageValue}(t) - s_i \cdot a)$ \State Submit RFQ with parameters $(s_i, a_i^*)$ \State Wait for RFQ response \If{RFQ filled} \State Update $\Delta p_i \gets \Delta p_i - s_i \cdot \text{sign}(\Delta p_i)$ \EndIf \State Update fill probability model with RFQ outcome \EndFor \EndFor \If{$|\Delta \mathbf{p}|_2 > \epsilon$} \State Return to Phase 1 with updated $\mathbf{p}(t)$ \EndIf \end{algorithmic} \end{algorithm}

\section{Comprehensive Execution Framework}

\subsection{Complete Algorithm}

The complete ETF create/redeem execution framework is:

\begin{algorithm} \caption{ETF Create/Redeem Execution with RFQs} \begin{algorithmic}[1] \State Initialize portfolio position $\mathbf{p}(0)$ \State Initialize fill probability models $\pi_i^{\text{RFQ}}$ for all instruments \State Set $t \gets 0$ \While{portfolio has open positions} \State Update market data: prices, premium/discount, liquidity \State Update eligible basket set $\mathcal{W}(t)$ and eligibility vector $\mathbf{e}(t)$ \State Solve basket selection problem to determine $\mathbf{v}(t)$ \State Compute modified geodesic flow: \State $\dot{\mathbf{p}}(t) = -\mathbf{M}_f^{-1} \mathbf{K}f \mathbf{p}(t) + \mathbf{M}f^{-1} \lambda{\text{basket}}(t) \sum{j=1}^K v_j(t) \mathbf{u}_j \mathbf{u}j^T \mathbf{p}(t)$ \State Update position: $\mathbf{p}(t+\Delta t) = \mathbf{p}(t) + \dot{\mathbf{p}}(t) \Delta t$ \State Check transition criterion: \For{each basket $j$ with $v_j(t) = 1$} \State $n_j \gets \lfloor \min_i \frac{p_i(t)}{w{j,i}} \rfloor$ \State $\text{RelDist}_j \gets \frac{|\mathbf{p}(t) - n_j \cdot \mathbf{w}_j|_2}{|n_j \cdot \mathbf{w}_j|2}$ \If{$\text{RelDist}j < \theta{\text{RFQ}}$} \State Transition to Phase 2 \State Solve MIQP to determine $\mathbf{z}^*$ and $\mathbf{p}{\text{residual}}^$ \State Execute RFQ Batching and Execution Algorithm \If{all RFQs executed successfully} \State Execute ETF creation/redemption with quantities $\mathbf{z}^$ \Else \State Return to Phase 1 with updated position \EndIf \EndIf \EndFor \State $t \gets t + \Delta t$ \EndWhile \end{algorithmic} \end{algorithm}

\subsection{Time Discretization}

For practical implementation, we discretize the continuous flow with time step $\Delta t$:

\begin{align} \mathbf{p}(t + \Delta t) = \mathbf{p}(t) + \dot{\mathbf{p}}(t) \Delta t \end{align}

The time step must satisfy the stability condition:

\begin{align} \Delta t < \frac{2}{\lambda_{\max}(\mathbf{M}_f^{-1} \mathbf{K}_f)} \end{align}

Where $\lambda_{\max}(\mathbf{M}_f^{-1} \mathbf{K}_f)$ is the largest eigenvalue of $\mathbf{M}_f^{-1} \mathbf{K}_f$.

\section{Real-Time Monitoring and Adaptation}

\subsection{NAV Timing and Fair Value Adjustment}

To account for NAV timing effects and provide more accurate arbitrage calculations:

\begin{align} \text{NAVTimingEffect}j(t) = \underbrace{\sum{i=1}^n w_{j,i} \cdot (\text{BondPrice}i(t{\text{current}}) - \text{BondPrice}i(t{\text{NAV}}))}{\text{price movement since NAV calculation}} + \underbrace{\Delta\text{AccruedIncome}j(t{\text{current}}, t{\text{NAV}})}_{\text{income accrual since NAV calculation}} \end{align}

The adjusted fair value incorporates both realized market movements and expected price changes:

\begin{align} \text{AdjustedFairValue}j(t) = \text{FairValue}j(t) + \underbrace{\sum{i=1}^n w{j,i} \cdot \text{ExpectedPriceChange}i(t, t+\Delta t{\text{execution}})}_{\text{expected price drift during execution}} \end{align}

Where: \begin{itemize} \item $t_{\text{NAV}}$ is the time of the last NAV calculation \item $t_{\text{current}}$ is the current time \item $\Delta t_{\text{execution}}$ is the expected execution time \item $\text{ExpectedPriceChange}_i(t, t')$ is the expected price change of instrument $i$ from time $t$ to $t'$ \end{itemize}

\subsection{Continuous Model Calibration}

After each RFQ response, we update the fill probability model:

\begin{align} \pi_{\text{base},i}(t+\Delta t) &= \alpha \cdot \pi_{\text{base},i}(t) + (1-\alpha) \cdot r_{\text{latest}} \ \beta_{\text{size},i}(t+\Delta t) &= \alpha \cdot \beta_{\text{size},i}(t) + (1-\alpha) \cdot \hat{\beta}{\text{size},i} \ \beta{\text{aggr},i}(t+\Delta t) &= \alpha \cdot \beta_{\text{aggr},i}(t) + (1-\alpha) \cdot \hat{\beta}_{\text{aggr},i} \end{align}

Where $r_{\text{latest}}$ is the outcome of the most recent RFQ (1 for fill, 0 for no fill).

\subsection{Performance Monitoring}

We track key performance metrics:

\begin{align} \text{FillRateAccuracy} &= 1 - \frac{1}{N} \sum_{i=1}^N |\pi_i^{\text{predicted}} - r_i| \ \text{ArbitrageCapture} &= \frac{\text{RealizedProfit}}{\text{TheoreticalArbitrageValue}} \ \text{ExecutionEfficiency} &= \frac{\text{ActualExecutionCost}}{\text{EstimatedExecutionCost}} \ \text{NAVTimingAccuracy} &= 1 - \frac{|\text{EstimatedFairValue} - \text{ActualFairValue}|}{\text{ActualFairValue}} \ \text{TotalArbitrageRealization} &= \frac{\text{RealizedProfit}}{\text{EstimatedArbitrageValue}} - \frac{\text{ActualFees} + \text{ActualFrictionCosts}}{\text{EstimatedArbitrageValue}} \end{align}

These metrics are used to adaptively tune the model parameters.

\section{Conclusion}

This document has presented a comprehensive mathematical framework for ETF create/redeem execution using RFQs, with explicit modeling of fill curve probabilities. The approach integrates:

\begin{itemize} \item Detailed RFQ fill probability models \item Modified geodesic flow for basket approach \item Multi-basket optimization with diversity constraints \item Integer programming for basket optimization \item Comprehensive arbitrage stack calculation \item NAV timing and fair value adjustments \item Parallel RFQ execution for multiple baskets \item Optimal RFQ sizing and pricing \item Continuous model calibration \end{itemize}

The framework provides a rigorous foundation for optimizing ETF creation and redemption operations in credit markets, with explicit handling of execution uncertainty through fill curve probability models, while accurately capturing the full arbitrage economics including creation/redemption fees, NAV timing effects, and bid/offer spreads. The multi-basket approach with diversity constraints ensures optimal portfolio construction with proper risk diversification.

\end{document}



